// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: policy/v1/policy.proto

package policyv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthorizeReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 模版ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 流程ID
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// 工单参数
	Method        string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizeReq) Reset() {
	*x = AuthorizeReq{}
	mi := &file_policy_v1_policy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizeReq) ProtoMessage() {}

func (x *AuthorizeReq) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizeReq.ProtoReflect.Descriptor instead.
func (*AuthorizeReq) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{0}
}

func (x *AuthorizeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthorizeReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AuthorizeReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_policy_v1_policy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_policy_v1_policy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_policy_v1_policy_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

var File_policy_v1_policy_proto protoreflect.FileDescriptor

const file_policy_v1_policy_proto_rawDesc = "" +
	"\n" +
	"\x16policy/v1/policy.proto\x12\tpolicy.v1\"S\n" +
	"\fAuthorizeReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x16\n" +
	"\x06method\x18\x03 \x01(\tR\x06method\"$\n" +
	"\bResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed2J\n" +
	"\rPolicyService\x129\n" +
	"\tAuthorize\x12\x17.policy.v1.AuthorizeReq\x1a\x13.policy.v1.ResponseB\x9d\x01\n" +
	"\rcom.policy.v1B\vPolicyProtoP\x01Z:github.com/Duke1616/ecmdb/api/proto/gen/policy/v1;policyv1\xa2\x02\x03PXX\xaa\x02\tPolicy.V1\xca\x02\tPolicy\\V1\xe2\x02\x15Policy\\V1\\GPBMetadata\xea\x02\n" +
	"Policy::V1b\x06proto3"

var (
	file_policy_v1_policy_proto_rawDescOnce sync.Once
	file_policy_v1_policy_proto_rawDescData []byte
)

func file_policy_v1_policy_proto_rawDescGZIP() []byte {
	file_policy_v1_policy_proto_rawDescOnce.Do(func() {
		file_policy_v1_policy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_policy_v1_policy_proto_rawDesc), len(file_policy_v1_policy_proto_rawDesc)))
	})
	return file_policy_v1_policy_proto_rawDescData
}

var file_policy_v1_policy_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_policy_v1_policy_proto_goTypes = []any{
	(*AuthorizeReq)(nil), // 0: policy.v1.AuthorizeReq
	(*Response)(nil),     // 1: policy.v1.Response
}
var file_policy_v1_policy_proto_depIdxs = []int32{
	0, // 0: policy.v1.PolicyService.Authorize:input_type -> policy.v1.AuthorizeReq
	1, // 1: policy.v1.PolicyService.Authorize:output_type -> policy.v1.Response
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_policy_v1_policy_proto_init() }
func file_policy_v1_policy_proto_init() {
	if File_policy_v1_policy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_policy_v1_policy_proto_rawDesc), len(file_policy_v1_policy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_policy_v1_policy_proto_goTypes,
		DependencyIndexes: file_policy_v1_policy_proto_depIdxs,
		MessageInfos:      file_policy_v1_policy_proto_msgTypes,
	}.Build()
	File_policy_v1_policy_proto = out.File
	file_policy_v1_policy_proto_goTypes = nil
	file_policy_v1_policy_proto_depIdxs = nil
}
