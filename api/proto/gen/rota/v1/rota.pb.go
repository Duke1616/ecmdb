// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: rota/v1/rota.proto

package rotav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 同步单条发送通知请求
type GetCurrentScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentScheduleRequest) Reset() {
	*x = GetCurrentScheduleRequest{}
	mi := &file_rota_v1_rota_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentScheduleRequest) ProtoMessage() {}

func (x *GetCurrentScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rota_v1_rota_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentScheduleRequest) Descriptor() ([]byte, []int) {
	return file_rota_v1_rota_proto_rawDescGZIP(), []int{0}
}

func (x *GetCurrentScheduleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量查询当前排班请求
type GetCurrentSchedulesByIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int64                `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentSchedulesByIDsRequest) Reset() {
	*x = GetCurrentSchedulesByIDsRequest{}
	mi := &file_rota_v1_rota_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentSchedulesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentSchedulesByIDsRequest) ProtoMessage() {}

func (x *GetCurrentSchedulesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rota_v1_rota_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentSchedulesByIDsRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentSchedulesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_rota_v1_rota_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentSchedulesByIDsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 批量查询当前排班响应
type Schedules struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schedules     []*Schedule            `protobuf:"bytes,1,rep,name=schedules,proto3" json:"schedules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedules) Reset() {
	*x = Schedules{}
	mi := &file_rota_v1_rota_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedules) ProtoMessage() {}

func (x *Schedules) ProtoReflect() protoreflect.Message {
	mi := &file_rota_v1_rota_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedules.ProtoReflect.Descriptor instead.
func (*Schedules) Descriptor() ([]byte, []int) {
	return file_rota_v1_rota_proto_rawDescGZIP(), []int{2}
}

func (x *Schedules) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

// 值班组
type RotaGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 组名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 值班人员列表
	Members       []string `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotaGroup) Reset() {
	*x = RotaGroup{}
	mi := &file_rota_v1_rota_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotaGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotaGroup) ProtoMessage() {}

func (x *RotaGroup) ProtoReflect() protoreflect.Message {
	mi := &file_rota_v1_rota_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotaGroup.ProtoReflect.Descriptor instead.
func (*RotaGroup) Descriptor() ([]byte, []int) {
	return file_rota_v1_rota_proto_rawDescGZIP(), []int{3}
}

func (x *RotaGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RotaGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RotaGroup) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

// 排班计划
type Schedule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 开始时间
	StartTime int64 `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// 结束时间
	EndTime int64 `protobuf:"varint,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// 值班组
	RotaGroup     *RotaGroup `protobuf:"bytes,4,opt,name=rota_group,json=rotaGroup,proto3" json:"rota_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	mi := &file_rota_v1_rota_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_rota_v1_rota_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_rota_v1_rota_proto_rawDescGZIP(), []int{4}
}

func (x *Schedule) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Schedule) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Schedule) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Schedule) GetRotaGroup() *RotaGroup {
	if x != nil {
		return x.RotaGroup
	}
	return nil
}

var File_rota_v1_rota_proto protoreflect.FileDescriptor

const file_rota_v1_rota_proto_rawDesc = "" +
	"\n" +
	"\x12rota/v1/rota.proto\x12\arota.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"+\n" +
	"\x19GetCurrentScheduleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"3\n" +
	"\x1fGetCurrentSchedulesByIDsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\x03R\x03ids\"<\n" +
	"\tSchedules\x12/\n" +
	"\tschedules\x18\x01 \x03(\v2\x11.rota.v1.ScheduleR\tschedules\"I\n" +
	"\tRotaGroup\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\amembers\x18\x03 \x03(\tR\amembers\"\x8d\x01\n" +
	"\bSchedule\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\x03R\aendTime\x121\n" +
	"\n" +
	"rota_group\x18\x04 \x01(\v2\x12.rota.v1.RotaGroupR\trotaGroup2\xb6\x01\n" +
	"\rOnCallService\x12K\n" +
	"\x12GetCurrentSchedule\x12\".rota.v1.GetCurrentScheduleRequest\x1a\x11.rota.v1.Schedule\x12X\n" +
	"\x18GetCurrentSchedulesByIDs\x12(.rota.v1.GetCurrentSchedulesByIDsRequest\x1a\x12.rota.v1.SchedulesB\x8d\x01\n" +
	"\vcom.rota.v1B\tRotaProtoP\x01Z6github.com/Duke1616/ecmdb/api/proto/gen/rota/v1;rotav1\xa2\x02\x03RXX\xaa\x02\aRota.V1\xca\x02\aRota\\V1\xe2\x02\x13Rota\\V1\\GPBMetadata\xea\x02\bRota::V1b\x06proto3"

var (
	file_rota_v1_rota_proto_rawDescOnce sync.Once
	file_rota_v1_rota_proto_rawDescData []byte
)

func file_rota_v1_rota_proto_rawDescGZIP() []byte {
	file_rota_v1_rota_proto_rawDescOnce.Do(func() {
		file_rota_v1_rota_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rota_v1_rota_proto_rawDesc), len(file_rota_v1_rota_proto_rawDesc)))
	})
	return file_rota_v1_rota_proto_rawDescData
}

var file_rota_v1_rota_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_rota_v1_rota_proto_goTypes = []any{
	(*GetCurrentScheduleRequest)(nil),       // 0: rota.v1.GetCurrentScheduleRequest
	(*GetCurrentSchedulesByIDsRequest)(nil), // 1: rota.v1.GetCurrentSchedulesByIDsRequest
	(*Schedules)(nil),                       // 2: rota.v1.Schedules
	(*RotaGroup)(nil),                       // 3: rota.v1.RotaGroup
	(*Schedule)(nil),                        // 4: rota.v1.Schedule
}
var file_rota_v1_rota_proto_depIdxs = []int32{
	4, // 0: rota.v1.Schedules.schedules:type_name -> rota.v1.Schedule
	3, // 1: rota.v1.Schedule.rota_group:type_name -> rota.v1.RotaGroup
	0, // 2: rota.v1.OnCallService.GetCurrentSchedule:input_type -> rota.v1.GetCurrentScheduleRequest
	1, // 3: rota.v1.OnCallService.GetCurrentSchedulesByIDs:input_type -> rota.v1.GetCurrentSchedulesByIDsRequest
	4, // 4: rota.v1.OnCallService.GetCurrentSchedule:output_type -> rota.v1.Schedule
	2, // 5: rota.v1.OnCallService.GetCurrentSchedulesByIDs:output_type -> rota.v1.Schedules
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_rota_v1_rota_proto_init() }
func file_rota_v1_rota_proto_init() {
	if File_rota_v1_rota_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rota_v1_rota_proto_rawDesc), len(file_rota_v1_rota_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rota_v1_rota_proto_goTypes,
		DependencyIndexes: file_rota_v1_rota_proto_depIdxs,
		MessageInfos:      file_rota_v1_rota_proto_msgTypes,
	}.Build()
	File_rota_v1_rota_proto = out.File
	file_rota_v1_rota_proto_goTypes = nil
	file_rota_v1_rota_proto_depIdxs = nil
}
