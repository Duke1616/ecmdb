// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package role

import (
	"github.com/Duke1616/ecmdb/internal/role/internal/repository"
	"github.com/Duke1616/ecmdb/internal/role/internal/repository/dao"
	"github.com/Duke1616/ecmdb/internal/role/internal/service"
	"github.com/Duke1616/ecmdb/internal/role/internal/web"
	"github.com/Duke1616/ecmdb/pkg/mongox"
	"github.com/google/wire"
	"sync"
)

// Injectors from wire.go:

func InitModule(db *mongox.Mongo) (*Module, error) {
	roleDAO := InitRoleDAO(db)
	roleRepository := repository.NewRoleRepository(roleDAO)
	serviceService := service.NewService(roleRepository)
	handler := web.NewHandler(serviceService)
	module := &Module{
		Hdl: handler,
		Svc: serviceService,
	}
	return module, nil
}

// wire.go:

var ProviderSet = wire.NewSet(web.NewHandler, service.NewService, repository.NewRoleRepository)

var daoOnce = sync.Once{}

func InitCollectionOnce(db *mongox.Mongo) {
	daoOnce.Do(func() {
		err := dao.InitIndexes(db)
		if err != nil {
			panic(err)
		}
	})
}

func InitRoleDAO(db *mongox.Mongo) dao.RoleDAO {
	InitCollectionOnce(db)
	return dao.NewRoleDAO(db)
}
